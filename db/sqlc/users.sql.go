// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: users.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    user_name,
    phone_number,
    location,
    type_of_device
) VALUES (
    $1,
    $2,
    $3,
    $4
) RETURNING id, user_name, phone_number, location, type_of_device, created_at
`

type CreateUserParams struct {
	UserName     string         `json:"userName"`
	PhoneNumber  string         `json:"phoneNumber"`
	Location     sql.NullString `json:"location"`
	TypeOfDevice sql.NullString `json:"typeOfDevice"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.UserName,
		arg.PhoneNumber,
		arg.Location,
		arg.TypeOfDevice,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.UserName,
		&i.PhoneNumber,
		&i.Location,
		&i.TypeOfDevice,
		&i.CreatedAt,
	)
	return i, err
}
